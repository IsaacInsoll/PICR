-- This was autogenerated by drizzle-kit
-- Then isaac modified it to allow it to run on existing DB with IF NOT EXISTS, EXCEPTION WHEN and DROP CONSTRAINT
DO $$ BEGIN
CREATE TYPE "public"."enum_AccessLogs_type" AS ENUM('Download', 'View');
EXCEPTION WHEN duplicate_object THEN null;END $$;

DO $$ BEGIN
CREATE TYPE "public"."enum_Users_commentPermissions" AS ENUM('edit', 'none', 'read');
EXCEPTION WHEN duplicate_object THEN null;END $$;

DO $$ BEGIN
CREATE TYPE "public"."enum_Files_flag" AS ENUM('approved', 'none', 'rejected');
EXCEPTION WHEN duplicate_object THEN null;END $$;

DO $$ BEGIN
CREATE TYPE "public"."enum_Files_type" AS ENUM('File', 'Image', 'Video');
EXCEPTION WHEN duplicate_object THEN null;END $$;

DO $$ BEGIN
CREATE TYPE "public"."enum_Brandings_primaryColor" AS ENUM('Blue', 'Cyan', 'Dark', 'Grape', 'Gray', 'Green', 'Indigo', 'Lime', 'Orange', 'Pink', 'Red', 'Teal', 'Violet', 'Yellow');
EXCEPTION WHEN duplicate_object THEN null;END $$;

DO $$ BEGIN
CREATE TYPE "public"."enum_Brandings_mode" AS ENUM('Auto', 'Light', 'Dark');
EXCEPTION WHEN duplicate_object THEN null;END $$;

DO $$ BEGIN
CREATE TYPE "public"."enum_Users_userType" AS ENUM('Admin', 'All', 'Link', 'User');
EXCEPTION WHEN duplicate_object THEN null;END $$;

CREATE TABLE IF NOT EXISTS "AccessLogs" (
	"id" serial PRIMARY KEY NOT NULL,
	"updatedAt" timestamp with time zone NOT NULL,
	"createdAt" timestamp with time zone DEFAULT now() NOT NULL,
	"userId" integer,
	"folderId" integer,
	"ipAddress" varchar(255),
	"sessionId" varchar(255),
	"userAgent" varchar(255),
	"type" "enum_AccessLogs_type"
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "Brandings" (
	"id" serial PRIMARY KEY NOT NULL,
	"updatedAt" timestamp with time zone NOT NULL,
	"createdAt" timestamp with time zone DEFAULT now() NOT NULL,
	"folderId" integer,
	"logoUrl" varchar(255),
	"mode" "enum_Brandings_mode",
	"primaryColor" "enum_Brandings_primaryColor"
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "Comments" (
	"id" serial PRIMARY KEY NOT NULL,
	"updatedAt" timestamp with time zone NOT NULL,
	"createdAt" timestamp with time zone DEFAULT now() NOT NULL,
	"folderId" integer,
	"fileId" integer,
	"userId" integer,
	"systemGenerated" boolean,
	"nickName" varchar(255),
	"comment" text
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "Files" (
	"id" serial PRIMARY KEY NOT NULL,
	"updatedAt" timestamp with time zone NOT NULL,
	"createdAt" timestamp with time zone DEFAULT now() NOT NULL,
	"name" varchar(255),
	"fileHash" varchar(255),
	"blurHash" varchar(255),
	"relativePath" varchar(255),
	"metadata" text,
	"rating" integer,
	"imageRatio" double precision,
	"duration" double precision,
	"fileSize" bigint,
	"fileLastModified" timestamp with time zone,
	"exists" boolean,
	"totalComments" integer,
	"latestComment" timestamp with time zone,
	"folderId" integer,
	"flag" "enum_Files_flag",
	"type" "enum_Files_type"
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "Folders" (
	"id" serial PRIMARY KEY NOT NULL,
	"updatedAt" timestamp with time zone NOT NULL,
	"createdAt" timestamp with time zone DEFAULT now() NOT NULL,
	"name" varchar(255),
	"folderHash" varchar(255),
	"relativePath" varchar(255),
	"exists" boolean,
	"parentId" integer,
	"heroImageId" integer
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "ServerOptions" (
	"id" serial PRIMARY KEY NOT NULL,
	"updatedAt" timestamp with time zone NOT NULL,
	"createdAt" timestamp with time zone DEFAULT now() NOT NULL,
	"lastBootedVersion" varchar(255),
	"avifEnabled" boolean
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "Users" (
	"id" serial PRIMARY KEY NOT NULL,
	"updatedAt" timestamp with time zone NOT NULL,
	"createdAt" timestamp with time zone DEFAULT now() NOT NULL,
	"name" varchar(255),
	"enabled" boolean,
	"commentPermissions" "enum_Users_commentPermissions",
	"folderId" integer,
	"lastAccess" timestamp with time zone,
	"userType" "enum_Users_userType",
	"hashedPassword" varchar(255),
	"username" varchar(255),
	"uuid" varchar(255)
);
--> statement-breakpoint
ALTER TABLE "AccessLogs" DROP CONSTRAINT IF EXISTS  "AccessLogs_userId_Users_id_fk";
ALTER TABLE "AccessLogs" DROP CONSTRAINT IF EXISTS  "AccessLogs_folderId_Folders_id_fk";
ALTER TABLE "Brandings" DROP CONSTRAINT IF EXISTS  "Brandings_folderId_Folders_id_fk";
ALTER TABLE "Comments" DROP CONSTRAINT IF EXISTS  "Comments_folderId_Folders_id_fk";
ALTER TABLE "Comments" DROP CONSTRAINT IF EXISTS  "Comments_fileId_Files_id_fk";
ALTER TABLE "Comments" DROP CONSTRAINT IF EXISTS  "Comments_userId_Users_id_fk";
ALTER TABLE "Files" DROP CONSTRAINT IF EXISTS  "Files_folderId_Folders_id_fk";
ALTER TABLE "Folders" DROP CONSTRAINT IF EXISTS  "Folders_parentId_Folders_id_fk";
ALTER TABLE "Folders" DROP CONSTRAINT IF EXISTS  "Folders_heroImageId_Files_id_fk";
ALTER TABLE "Users" DROP CONSTRAINT IF EXISTS  "Users_folderId_Folders_id_fk";


ALTER TABLE "AccessLogs" ADD CONSTRAINT  "AccessLogs_userId_Users_id_fk" FOREIGN KEY ("userId") REFERENCES "public"."Users"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "AccessLogs" ADD CONSTRAINT "AccessLogs_folderId_Folders_id_fk" FOREIGN KEY ("folderId") REFERENCES "public"."Folders"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "Brandings" ADD CONSTRAINT "Brandings_folderId_Folders_id_fk" FOREIGN KEY ("folderId") REFERENCES "public"."Folders"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "Comments" ADD CONSTRAINT "Comments_folderId_Folders_id_fk" FOREIGN KEY ("folderId") REFERENCES "public"."Folders"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "Comments" ADD CONSTRAINT "Comments_fileId_Files_id_fk" FOREIGN KEY ("fileId") REFERENCES "public"."Files"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "Comments" ADD CONSTRAINT "Comments_userId_Users_id_fk" FOREIGN KEY ("userId") REFERENCES "public"."Users"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "Files" ADD CONSTRAINT "Files_folderId_Folders_id_fk" FOREIGN KEY ("folderId") REFERENCES "public"."Folders"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "Folders" ADD CONSTRAINT "Folders_parentId_Folders_id_fk" FOREIGN KEY ("parentId") REFERENCES "public"."Folders"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "Folders" ADD CONSTRAINT "Folders_heroImageId_Files_id_fk" FOREIGN KEY ("heroImageId") REFERENCES "public"."Files"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "Users" ADD CONSTRAINT "Users_folderId_Folders_id_fk" FOREIGN KEY ("folderId") REFERENCES "public"."Folders"("id") ON DELETE no action ON UPDATE no action;